# -----------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------
# The URL of the database. 'codepulse_tracker_db' is the database we created earlier.
spring.datasource.url=jdbc:mysql://localhost:3306/codepulse_tracker_db?useSSL=false&serverTimezone=UTC
# The username for the database connection. 'root' is the default for local MySQL.
spring.datasource.username=root
# The password for the database connection. Replace with your actual password.
spring.datasource.password=312531
# The JDBC driver for MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# -----------------------------------------------------
# JPA/HIBERNATE CONFIGURATION
# -----------------------------------------------------
# This setting allows Hibernate to automatically update the database schema based on your entities.
# 'update': updates the schema if it has changed.
# 'validate': validates the schema, makes no changes to the database.
# 'create': creates the schema, destroying previous data.
# 'create-drop': creates and then drops the schema when the application context ends.
# Use 'update' or 'validate' for development. Use 'validate' or none in production.
spring.jpa.hibernate.ddl-auto=update

# The dialect tells Hibernate how to translate its queries into MySQL-specific SQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Show the actual SQL queries generated by Hibernate in the console. Useful for debugging.
spring.jpa.show-sql=true

# Format the SQL shown in the console to be more readable.
spring.jpa.properties.hibernate.format_sql=true

# -----------------------------------------------------
# JWT SECRET KEY
# This should be a long, random, and securely stored string.
# For demonstration, it's here. In production, use environment variables or a secrets manager.
# Generate a new key for your application.
# -----------------------------------------------------
jwt.secret=Oa8Z4!fVp2$kRz7Lq#bXwM9@cDfUeHsJtYpL0NvGhQxKiTuWz1

